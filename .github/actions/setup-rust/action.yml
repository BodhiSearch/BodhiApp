name: setup-rust
description: setup rust and components
inputs:
  platform:
    description: "Platform to build for"
    required: true
  targets:
    description: "Targets to build for"
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: install dependencies (ubuntu only)
      shell: bash
      if: inputs.platform == 'ubuntu-22.04' # This must match the platform value defined above.
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
      # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
    - uses: Swatinem/rust-cache@v2
      with:
        cache-directories: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-
    - name: install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
        targets: ${{ inputs.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || inputs.targets }}
        components: rustfmt,clippy,llvm-tools
    - uses: taiki-e/install-action@nextest
    - uses: taiki-e/install-action@cargo-llvm-cov
    - name: Install Tauri CLI
      shell: bash
      run: |
        if ! cargo tauri -V &> /dev/null; then
          cargo install tauri-cli@^2.0.0
        fi
    - name: Install bindgen
      shell: bash
      run: |
        if ! bindgen -V &> /dev/null; then
          cargo install bindgen-cli
        fi
