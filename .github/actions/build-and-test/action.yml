name: build-and-test
description: Execute core build and test suite with coverage reporting
inputs:
  platform:
    description: "Platform to build for"
    required: true
  target:
    description: "Target to build for"
    required: true
  codecov-token:
    description: "Codecov token for coverage upload"
    required: false

outputs:
  coverage-success:
    description: "Whether coverage generation was successful"
    value: ${{ steps.coverage.outcome == 'success' }}

runs:
  using: composite
  steps:
    - name: Clean build environment
      shell: bash
      run: make ci.clean

    - name: Generate code coverage
      id: coverage
      shell: bash
      run: make ci.coverage
      env:
        CI_DEFAULT_VARIANT: cpu

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      if: success() && inputs.codecov-token != ''
      continue-on-error: true
      with:
        name: BodhiApp-${{ inputs.target }}
        token: ${{ inputs.codecov-token }}
        slug: BodhiSearch/BodhiApp
        files: lcov.info
        fail_ci_if_error: false
        flags: ${{ inputs.target }},bodhi

    - name: Upload llama_server_proc binaries
      uses: actions/upload-artifact@v4
      with:
        name: llama-server-binaries-${{ inputs.target }}
        path: crates/llama_server_proc/bin/
        retention-days: 1

    - name: Run UI Tests
      shell: bash
      run: make ci.ui.unit

    - name: Upload UI coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      if: success() && inputs.codecov-token != ''
      continue-on-error: true
      with:
        name: BodhiApp-${{ inputs.target }}
        token: ${{ inputs.codecov-token }}
        slug: BodhiSearch/BodhiApp
        files: |
          crates/bodhi/coverage/coverage-final.json
          crates/bodhi/coverage/clover.xml
        fail_ci_if_error: false
        flags: ${{ inputs.target }},bodhi,ui 