name: Publish TypeScript Client

on:
  push:
    tags:
      - 'ts-client/v*'

# Prevent concurrent releases
concurrency:
  group: npm-release-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node
        uses: ./.github/actions/setup-node
        with:
          platform: ubuntu-latest

      - name: Extract version information
        id: version
        working-directory: ./ts-client
        run: |
          # Extract the version from the tag
          TAG_VERSION=${GITHUB_REF#refs/tags/ts-client/v}
          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "release_version=$TAG_VERSION" >> $GITHUB_OUTPUT

          # Calculate the next patch version for post-release
          IFS='.' read -ra VERSION_PARTS <<< "$TAG_VERSION"
          NEXT_PATCH=$((${VERSION_PARTS[2]} + 1))
          NEXT_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$NEXT_PATCH-dev"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Update version for release
        working-directory: ./ts-client
        run: |
          # Set version from tag directly
          npm version ${{ steps.version.outputs.tag_version }} --no-git-tag-version

      - name: Install dependencies
        working-directory: ./ts-client
        run: npm ci

      - name: Verify OpenAPI spec exists
        run: |
          if [ ! -f "openapi.json" ]; then
            echo "OpenAPI spec file not found at openapi.json"
            exit 1
          fi

      - name: Build package
        working-directory: ./ts-client
        run: |
          # Clean the dist directory
          npm run clean
          # Generate types from existing OpenAPI spec and bundle
          npm run build:openapi

      - name: Verify build artifacts
        working-directory: ./ts-client
        run: |
          if [ ! -d "dist" ]; then
            echo "Build artifacts not found"
            exit 1
          fi

          # Check for required files
          required_files=("index.js" "index.mjs" "index.d.ts" "types/types.gen.ts")
          for file in "${required_files[@]}"; do
            if [ ! -f "dist/$file" ]; then
              echo "Required file dist/$file is missing"
              exit 1
            fi
          done
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ts-client/dist/*
            ts-client/README.md
            ts-client/package.json
          name: 'TypeScript Client v${{ steps.version.outputs.tag_version }}'
          body: |
            TypeScript Client Release v${{ steps.version.outputs.tag_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}

      - name: Publish to npm
        working-directory: ./ts-client
        run: |
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify NPM Package
        working-directory: ./ts-client
        run: |
          # Wait for NPM to index the package
          sleep 10
          PUBLISHED_VERSION=$(npm view @bodhiapp/ts-client version 2>/dev/null || echo "not found")
          if [ "$PUBLISHED_VERSION" = "not found" ]; then
            echo "Package not found on NPM"
            exit 1
          fi
          echo "Successfully published version $PUBLISHED_VERSION"

      - name: Bump version and add -dev suffix
        run: |
          cd ./ts-client
          npm version ${{ steps.version.outputs.next_version }} --no-git-tag-version

      - name: Commit and push version bump
        uses: ./.github/actions/commit-and-push-with-retry
        with:
          branch: main
          commit-message: "chore: bump ts-client version to ${{ steps.version.outputs.next_version }} after release [skip ci]"
          files: "ts-client/package.json ts-client/package-lock.json"
