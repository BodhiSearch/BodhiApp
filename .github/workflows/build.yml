name: Mac/Linux Build Flow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CI: true
  RUST_BACKTRACE: 1

jobs:
  build:
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: macos-latest
          #   target: aarch64-apple-darwin
          - platform: ubuntu-latest-4-cores
            target: x86_64-unknown-linux-gnu
          # - platform: windows-latest
          #   target: x86_64-pc-windows-msvc
          # - platform: macos-13
          #   target: x86_64-apple-darwin
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libglib2.0-dev pkg-config
      - name: envs
        shell: bash
        run: |
          echo "USER_HOME=$HOME" >> $GITHUB_ENV
      - name: Enable symlinks
        shell: bash
        run: |
          git config --global core.symlinks true
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - name: Rewrite submodule URLs and checkout submodules
        shell: bash
        run: |
          git config --global url.https://gh_pat:${{ secrets.GH_PAT }}@github.com/.insteadOf git@github.com:
          git submodule sync --recursive
          git submodule update --init --recursive --depth=1
          git config --global --unset url.https://gh_pat:${{ secrets.GH_PAT }}@github.com/.insteadOf

      - name: Setup Python packages
        run: |
          python -m pip install -U pip
          python -m pip install -r crates/objs/tests/scripts/requirements.txt
          pip install -U "huggingface_hub[cli]"

      - name: Cache HuggingFace models
        uses: actions/cache@v4
        id: cache-hf
        with:
          path: ${{ env.USER_HOME }}/.cache/huggingface
          key: hf-cache-phi4-mini-instruct
          enableCrossOsArchive: true

      - name: Check and Download model
        if: steps.cache-hf.outputs.cache-hit != 'true'
        run: |
          huggingface-cli download --revision 7ff82c2aaa4dde30121698a973765f39be5288c0 bartowski/microsoft_Phi-4-mini-instruct-GGUF microsoft_Phi-4-mini-instruct-Q4_K_M.gguf

      - name: setup-rust
        uses: ./.github/actions/setup-rust
        with:
          platform: ${{ matrix.platform }}
          target: ${{ matrix.target }}
      - name: setup-node
        uses: ./.github/actions/setup-node
        with:
          platform: ${{ matrix.platform }}
      - name: clean
        shell: bash
        run: |
          make ci.clean
      - name: Generate code coverage
        shell: bash
        run: |
          make ci.coverage
        env:
          HF_TEST_TOKEN_ALLOWED: ${{ secrets.HF_TEST_TOKEN_ALLOWED }}
          HF_TEST_TOKEN_PUBLIC: ${{ secrets.HF_TEST_TOKEN_PUBLIC }}
          CI_DEFAULT_VARIANT: cpu
          # Integration test environment variables
          INTEG_TEST_AUTH_URL: ${{ vars.INTEG_TEST_AUTH_URL }}
          INTEG_TEST_AUTH_REALM: ${{ vars.INTEG_TEST_AUTH_REALM }}
          INTEG_TEST_CLIENT_ID: ${{ secrets.INTEG_TEST_CLIENT_ID }}
          INTEG_TEST_CLIENT_SECRET: ${{ secrets.INTEG_TEST_CLIENT_SECRET }}
          INTEG_TEST_USERNAME: ${{ vars.INTEG_TEST_USERNAME }}
          INTEG_TEST_PASSWORD: ${{ secrets.INTEG_TEST_PASSWORD }}
          INTEG_TEST_ISSUER: ${{ vars.INTEG_TEST_ISSUER }}
          INTEG_TEST_KID: ${{ vars.INTEG_TEST_KID }}
          INTEG_TEST_PUBLIC_KEY: ${{ vars.INTEG_TEST_PUBLIC_KEY }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        if: success()
        continue-on-error: true
        with:
          name: BodhiApp-${{ matrix.target }}
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: BodhiSearch/BodhiApp
          files: lcov.info
          fail_ci_if_error: false
          flags: ${{ matrix.target }},bodhi
      - name: Run UI Tests
        run: |
          make ci.ui
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        if: success()
        continue-on-error: true
        with:
          name: BodhiApp-${{ matrix.target }}
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: BodhiSearch/BodhiApp
          files: |
            crates/bodhi/coverage/coverage-final.json
            crates/bodhi/coverage/clover.xml
          fail_ci_if_error: false
          flags: ${{ matrix.target }},bodhi,ui
      - name: Check ts-client is up to date
        run: make ci.ts-client-check
      - name: Check ts-client tests pass
        run: make ci.ts-client-test
