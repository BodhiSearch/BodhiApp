name: Mac/Linux Build Flow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CI: true
  RUST_BACKTRACE: 1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: aarch64-apple-darwin
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # - platform: windows-latest
          #   target: x86_64-pc-windows-msvc
          - platform: macos-13
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.platform }}
    steps:
      - name: envs
        shell: bash
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo RUN_URL=${RUN_URL} >> $GITHUB_ENV
          echo TARGET=${{ matrix.target }} >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: setup
        uses: ./.github/actions/setup
        with:
          GH_PAT: ${{ secrets.GH_PAT }}
          platform: ${{ matrix.platform }}
          git-config: |
            core.symlinks=true
      - name: setup-rust
        uses: ./.github/actions/setup-rust
        with:
          platform: ${{ matrix.platform }}
      - name: setup-node
        uses: ./.github/actions/setup-node
      - name: clean
        shell: bash
        run: |
          make ci.clean
      - name: Generate code coverage
        shell: bash
        run: |
          make ci.coverage
        env:
          HF_TEST_TOKEN_ALLOWED: ${{ secrets.HF_TEST_TOKEN_ALLOWED }}
          HF_TEST_TOKEN_PUBLIC: ${{ secrets.HF_TEST_TOKEN_PUBLIC }}
          RUSTFLAGS: "--cfg ci"
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          name: BodhiApp-${{ matrix.target }}
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: BodhiSearch/BodhiApp
          files: lcov.info
          fail_ci_if_error: true
          flags: ${{ matrix.target }},bodhi
      # - name: build the app
      #   run: |
      #     make ci.build TARGET=${{ matrix.target }}
