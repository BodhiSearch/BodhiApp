name: App Build Flow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CI: true
  RUST_BACKTRACE: 1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            target: aarch64-apple-darwin
            llama_cpp_build_flags: "-DGGML_METAL_EMBED_LIBRARY=ON -DGGML_OPENMP=OFF"
    runs-on: ${{ matrix.platform }}
    steps:
      - name: envs
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo RUN_URL=${RUN_URL} >> $GITHUB_ENV
          echo TARGET=${{ matrix.target }} >> $GITHUB_ENV
      - uses: actions/checkout@v4
        # with:
        #   lfs: true
        # not running integration test on CI, disabling lfs
      - name: setup
        uses: ./.github/actions/setup
        with:
          GH_PAT: ${{ secrets.GH_PAT }}
      - name: llama_cpp
        uses: ./.github/actions/llama_cpp
        with:
          LLAMA_CPP_BUILD_FLAGS: ${{ matrix.llama_cpp_build_flags }}
      - name: clean
        run: |
          make ci.clean
      - name: build llama-server-bindings
        run: |
          cargo build -p llama-server-bindings --target ${{ matrix.target }}
      - name: Generate code coverage
        run: |
          make ci.coverage
        env:
          HF_TEST_TOKEN_ALLOWED: ${{ secrets.HF_TEST_TOKEN_ALLOWED }}
          HF_TEST_TOKEN_PUBLIC: ${{ secrets.HF_TEST_TOKEN_PUBLIC }}
          RUSTFLAGS: "--cfg ci"
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: BodhiSearch/BodhiApp
          files: lcov.info
          fail_ci_if_error: true
          flags: ${{ matrix.target }},bodhi
      - name: build the app
        run: |
          make ci.build TARGET=${{ matrix.target }}
