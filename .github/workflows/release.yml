name: App Release Flow

on:
  push:
    # branches:
    #   - main
    tags:
      - "v*"
  workflow_dispatch:

env:
  CI: true

jobs:
  publish:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            target: aarch64-apple-darwin
            llama_cpp_build_flags: "-DLLAMA_METAL_EMBED_LIBRARY=ON"
          # - platform: "macos-latest" # for Intel based macs.
          #   args: "--target x86_64-apple-darwin"
          # - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ""
          # - platform: "windows-latest"
          #   args: ""
    runs-on: ${{ matrix.platform }}
    steps:
      - name: envs
        run: |
          echo TARGET=${{ matrix.target }} >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: setup
        uses: ./.github/actions/setup
        with:
          GH_PAT: ${{ secrets.GH_PAT }}
      - name: llama_cpp
        uses: ./.github/actions/llama_cpp
        with:
          LLAMA_CPP_BUILD_FLAGS: ${{ matrix.llama_cpp_build_flags }}
      - name: clean
        run: |
          cargo clean -p llama-server-bindings
          cargo clean -p bodhi
      - name: build llama-server-bindings
        run: |
          cargo build -p llama-server-bindings --target ${{ matrix.target }}
      - name: Set VERSION environment variable
        run: |
          if [[ "${GITHUB_REF}" =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV
            echo "TAG_BUILD=true" >> $GITHUB_ENV
          else
            DATE=$(date +%Y%m%d)
            GITSHA=$(git rev-parse --short=8 HEAD)
            echo "VERSION=0.0.1-${DATE}-${GITSHA}" >> $GITHUB_ENV
            echo "TAG_BUILD=false" >> $GITHUB_ENV
          fi
      - name: tauri-action
        id: tauri-action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_PUBLIC_API_BASE_URL: "/"
        with:
          projectPath: app
          distPath: app/out
          appName: Bodhi
          appVersion: ${{ env.VERSION }}
          tagName: app/v__VERSION__
          releaseName: "Bodhi App v__VERSION__"
          releaseId: "bodhi-app-${{ env.VERSION }}"
          releaseBody: "Bodhi App ${{ env.VERSION }} release.\nSee the assets to download this version and install."
          releaseDraft: false
          prerelease: true
          args: "--target ${{ matrix.target }}"
      - name: Update Homebrew Formula
        if: matrix.target == 'aarch64-apple-darwin' && env.TAG_BUILD == 'true'
        uses: ./.github/actions/homebrew
        with:
          access_token: ${{ secrets.GH_PAT }}
          artifact_paths: ${{ steps.tauri-action.outputs.artifactPaths }}
